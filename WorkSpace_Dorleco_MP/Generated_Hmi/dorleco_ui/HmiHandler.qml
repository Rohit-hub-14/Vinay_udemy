// This code is auto-generated by Qul's qmlinterfacegenerator tool from file 'C:/user/Automotive/Cluster/Codebase/Dorleco/EvCluster/cluster/controller/hmi/inc/hmihandler.h'
// WARNING! All changes made in this file will be lost!

pragma qmlinterface;
pragma Singleton;
pragma cppname$HmiHandler;
import "C:/user/Automotive/Cluster/Codebase/Dorleco/EvCluster/cluster/controller/hmi/inc/hmihandler.h";
import QtQuick;

Singleton {
    enum ClusterEvents_t { Event_None = 0, Event_Motor = 1, Event_Battery = 2, Event_DriveMode = 3, Event_DeviceStatus = 4, Event_Indicator = 5, Event_HwIndicator = 6, Event_Message = 7, Event_Standby = 8, Event_Fault = 9, Event_Call = 10, Event_TurnByTurnNav = 11, Event_NavSwitch = 12, Event_Time = 13, Event_Alert = 14, Event_DeviceInfo = 15, Event_BTMessage = 16, Event_Charge = 17, Event_BMS = 18, Event_Indicator1 = 19, Event_Indicator2 = 20, Event_Indicator3 = 21, Event_Max = 22 }
    signal dateTimeChanged(int mday, int mmonth, int myear, int mhour, int mminute, bool mPM, int medit, int mstate);
    signal navSwitchStatusChanged(int mkey);
    signal messageChanged(int mmsgid);
    signal hwStatusChanged(bool mignition, bool mleftind, bool mrightind, bool mhighbeam, bool mlowbeam, bool mdoorind, bool mposition, bool mseatybelt, bool mfoglight);
    signal alertInfoChanged(int mid, int mcode);
    signal deviceInfoChanged(int mswversion, int mhwversion, int mslnum);
    signal motorInfoChanged(int mspeed, int modo, int mtrip);
    signal battInfoChanged(int msoc, int mrange, int mbattemp);
    signal bmsInfoChanged(int menergyavg, int menergycon);
    signal status0InfoChanged(bool mhvbattery, bool mcoolanttemp, bool mbmsfault, bool mthernalrunaway, int mdrive);
    signal status1InfoChanged(bool mregen, bool mmaxspeed, bool mlvbatttery, int mcharge, int msteering);
    signal status2InfoChanged(bool mlowcoolant, bool mbreakfault, bool mparking, bool mairbag);
    signal status3InfoChanged(bool mreadytodrive, bool mdrivedisabled, bool mserdisc, bool mhvbatfault, bool mlowsoc, bool mbatlowcooltemp, bool mlimphome, bool mhillhold);
    signal chargeInfoChanged(int mtime, int menergycon);
    function updatePlatform(eEvent : int, pEventParam)  {}
    function updateUI(eEvent : int, pEventParam)  {}
}
